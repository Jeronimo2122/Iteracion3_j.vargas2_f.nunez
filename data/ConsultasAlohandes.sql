--REQUERIMIENTOS DE CONSULTA--

--RFC1--
SELECT operador.id, OPERADOR.NOMBRE AS OPERADOR,SUM(PRECIO) AS DINERO_RECIBIDO_CORRIDO
FROM RESERVA, OPERADOR, ALOJAMIENTO_OPERADOR
WHERE ALOJAMIENTO_OPERADOR.ID_OPERADOR = OPERADOR.ID AND RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO_OPERADOR.ID_ALOJA
GROUP BY operador.id, OPERADOR.NOMBRE
;
SELECT operador.id, OPERADOR.NOMBRE AS OPERADOR,SUM(PRECIO) AS DINERO_RECIBIDO_AÑO_ACTUAL
FROM RESERVA, OPERADOR, ALOJAMIENTO_OPERADOR
WHERE ALOJAMIENTO_OPERADOR.ID_OPERADOR = OPERADOR.ID AND RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO_OPERADOR.ID_ALOJA AND
RESERVA.fecha_llegada BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('31/12/2023','DD/MM/YYYY')
AND RESERVA.fecha_salida  BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('31/12/2023','DD/MM/YYYY')
GROUP BY operador.id, OPERADOR.NOMBRE
;
SELECT * 
FROM (SELECT operador.id, OPERADOR.NOMBRE AS OPERADOR,SUM(PRECIO) AS DINERO_RECIBIDO_CORRIDO
FROM RESERVA, OPERADOR, ALOJAMIENTO_OPERADOR
WHERE ALOJAMIENTO_OPERADOR.ID_OPERADOR = OPERADOR.ID AND RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO_OPERADOR.ID_ALOJA
GROUP BY operador.id, OPERADOR.NOMBRE) NATURAL JOIN 
(SELECT operador.id, OPERADOR.NOMBRE AS OPERADOR,SUM(PRECIO) AS DINERO_RECIBIDO_ANIO_ACTUAL
FROM RESERVA, OPERADOR, ALOJAMIENTO_OPERADOR
WHERE ALOJAMIENTO_OPERADOR.ID_OPERADOR = OPERADOR.ID AND RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO_OPERADOR.ID_ALOJA AND
RESERVA.fecha_llegada BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('31/12/2023','DD/MM/YYYY')
AND RESERVA.fecha_salida  BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('31/12/2023','DD/MM/YYYY')
GROUP BY operador.id, OPERADOR.NOMBRE)
;

--RFC2--
SELECT *
FROM (SELECT ALOJAMIENTO.ID, ALOJAMIENTO.TIPO_ALOJA, OPERADOR.NOMBRE AS OPERADOR,COUNT(*) AS CANT_RESERVAS
        FROM RESERVA, ALOJAMIENTO, OPERADOR, ALOJAMIENTO_OPERADOR
        WHERE RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO.ID
            AND ALOJAMIENTO.ID = ALOJAMIENTO_OPERADOR.ID_ALOJA
            AND OPERADOR.ID = ALOJAMIENTO_OPERADOR.ID_OPERADOR
        GROUP BY ALOJAMIENTO.ID, ALOJAMIENTO.TIPO_ALOJA, OPERADOR.NOMBRE
        ORDER BY COUNT(*) DESC)
WHERE ROWNUM <= 20
;

--RFC3--
SELECT id, habitaciones_disponibles / num_habitaciones as indice_ocupacion
FROM hotel_hostal
UNION
SELECT id, numDisponible/numViviendas as indice_ocupacion
FROM edificio_universitario;

--RFC4--
SELECT a.id, a.capacidad, a.estado, a.direccion, a.tipo_aloja
FROM (SELECT a.id, a.capacidad, a.estado, a.direccion, a.tipo_aloja 
    FROM ALOJAMIENTO A LEFT JOIN RESERVA R
    ON a.ID = R.ID_ALOJAMIENTO
    WHERE R.fecha_llegada NOT BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('02/09/2022','DD/MM/YYYY')
    AND R.fecha_salida NOT BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('02/02/2022','DD/MM/YYYY') 
    OR R.fecha_salida IS NULL OR R.ESTADO = 'CANCELADA' ) A, ALOJAMIENTO_SERVICIO ASER, SERVICIO S
WHERE A.ID = ASER.ID_aLOJA AND ASER.ID_SERVICIO = S.ID
AND S.NOMBRE IN ('WI-FI','TINA')
GROUP BY a.id, a.capacidad, a.estado, a.direccion, a.tipo_aloja
HAVING COUNT(*) = 2
;

--RFC5:

SELECT VINCULO, COUNT(*) AS CANTIDAD_DE_USUARIOS
FROM (
    SELECT VINCULO FROM PERSONA
    UNION ALL
    SELECT VINCULO FROM CLIENTE
) 
GROUP BY VINCULO;

--RFC6:

SELECT 
    c.identificacion,
    TRUNC(MONTHS_BETWEEN(r.fecha_salida, r.fecha_llegada) * 30) AS noches_contratados,
    a.tipo_aloja,
    SUM(r.precio) AS dinero_pagado
FROM 
    cliente c 
    INNER JOIN reserva r ON c.identificacion = r.id_cliente 
    INNER JOIN alojamiento a ON r.id_alojamiento = a.id
WHERE 
    c.identificacion = 1
GROUP BY 
    c.identificacion, a.tipo_aloja, TRUNC(MONTHS_BETWEEN(r.fecha_salida, r.fecha_llegada) * 30);

--RFC7: 

SELECT TO_CHAR(FECHA_LLEGADA, 'MM/YYYY') AS MES,
       COUNT(ID_ALOJAMIENTO) AS ALOJAMIENTOS_OCUPADOS,
       SUM(PRECIO) AS INGRESOS,
       SUM(CAPACIDAD) AS OCUPACION
FROM RESERVA JOIN ALOJAMIENTO ON RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO.ID 
WHERE FECHA_LLEGADA BETWEEN TO_DATE('01/01/2023','DD/MM/YYYY') AND TO_DATE('02/09/2023','DD/MM/YYYY')
AND ALOJAMIENTO.TIPO_ALOJA = 'VIVIENDA_U'
GROUP BY TO_CHAR(FECHA_LLEGADA, 'MM/YYYY')
ORDER BY MES, ALOJAMIENTOS_OCUPADOS,INGRESOS DESC, OCUPACION DESC ;

--RFC8:

SELECT C.IDENTIFICACION, COUNT(*) AS NUM_RESERVAS, SUM(TRUNC(MONTHS_BETWEEN(R.FECHA_SALIDA, R.FECHA_LLEGADA)*30)) AS NUM_NOCHES
FROM RESERVA R
INNER JOIN CLIENTE C ON R.ID_CLIENTE = C.IDENTIFICACION
WHERE R.ID_ALOJAMIENTO = 7
GROUP BY C.IDENTIFICACION
HAVING COUNT(*) >= 3 OR SUM(TRUNC(MONTHS_BETWEEN(R.FECHA_SALIDA, R.FECHA_LLEGADA)*30)) >= 15
ORDER BY NUM_RESERVAS DESC;

--RFC 9:

SELECT A.ID, A.TIPO_ALOJA
FROM ALOJAMIENTO A
WHERE NOT EXISTS (
    SELECT *
    FROM RESERVA R 
    WHERE R.ID_ALOJAMIENTO = A.ID
    AND R.FECHA_LLEGADA >= (SELECT MAX(FECHA_LLEGADA) FROM RESERVA WHERE ID_ALOJAMIENTO = A.ID) - INTERVAL '1' MONTH);
