--REQUERIMIENTOS DE CONSULTA--

--RFC1--
SELECT operador.id, OPERADOR.NOMBRE AS OPERADOR,SUM(PRECIO) AS DINERO_RECIBIDO
FROM RESERVA, OPERADOR, ALOJAMIENTO_OPERADOR
WHERE ALOJAMIENTO_OPERADOR.ID_OPERADOR = OPERADOR.ID AND RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO_OPERADOR.ID_ALOJAMIENTO
GROUP BY operador.id, OPERADOR.NOMBRE
;

--RFC2--
SELECT *
FROM (SELECT ALOJAMIENTO.ID, ALOJAMIENTO.TIPO_ALOJA, OPERADOR.NOMBRE AS OPERADOR,COUNT(*) AS CANT_RESERVAS
        FROM RESERVA, ALOJAMIENTO, OPERADOR
        WHERE RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO.ID
            AND OPERADOR.ID = RESERVA.ID_OPERADOR
        GROUP BY ALOJAMIENTO.ID, ALOJAMIENTO.TIPO_ALOJA, OPERADOR.NOMBRE
        ORDER BY COUNT(*) DESC)
WHERE ROWNUM <= 20
;

--RFC3--
SELECT id, habitaciones_disponibles / num_habitaciones as indice_ocupacion
FROM hotel_hostal
UNION
SELECT id, numDisponible/numViviendas as indice_ocupacion
FROM edificio_universitario;

--RFC4--
SELECT ALOJAMIENTO.ID, ALOJAMIENTO.TIPO_ALOJA, OPERADOR.NOMBRE AS OPERADOR, COUNT(*) 
FROM RESERVA, ALOJAMIENTO_SERVICIO, ALOJAMIENTO, SERVICIO, OPERADOR
WHERE RESERVA.ID_ALOJAMIENTO = ALOJAMIENTO_SERVICIO.ID_ALOJA
    AND ALOJAMIENTO.ID = RESERVA.ID_ALOJAMIENTO
    AND ALOJAMIENTO_SERVICIO.ID_SERVICIO = SERVICIO.ID
    AND RESERVA.ID_OPERADOR = OPERADOR.ID
    AND reserva.fecha_llegada NOT BETWEEN TO_DATE('01/01/2020','DD/MM/YYYY') AND TO_DATE('11/11/2022','DD/MM/YYYY')
    AND reserva.fecha_salida NOT BETWEEN TO_DATE('01/01/2020','DD/MM/YYYY') AND TO_DATE('11/11/2022','DD/MM/YYYY')
    AND servicio.nombre in ('WI-FI','TINA')
    GROUP BY ALOJAMIENTO.ID, ALOJAMIENTO.TIPO_ALOJA, OPERADOR.NOMBRE
    HAVING COUNT(*) = 2
;

--RFC5--

SELECT P.VINCULO, COUNT(DISTINCT C.IDENTIFICACION) AS CANTIDAD_DE_USUARIOS
FROM CLIENTE C
JOIN RESERVA R ON C.IDENTIFICACION = R.ID_CLIENTE
JOIN ALOJAMIENTO A ON R.ID_ALOJAMIENTO = A.ID
JOIN PERSONA P ON C.IDENTIFICACION = P.ID
GROUP BY P.VINCULO;

--RFC6--

SELECT 
    c.identificacion,
    TRUNC(MONTHS_BETWEEN(r.fecha_salida, r.fecha_llegada) * 30) AS dias_contratados,
    a.tipo_aloja,
    SUM(r.precio) AS dinero_pagado
FROM 
    cliente c 
    INNER JOIN reserva r ON c.identificacion = r.id_cliente 
    INNER JOIN alojamiento a ON r.id_alojamiento = a.id
WHERE 
    c.identificacion = 1
GROUP BY 
    c.identificacion, a.tipo_aloja, TRUNC(MONTHS_BETWEEN(r.fecha_salida, r.fecha_llegada) * 30);

--RFC7--

SELECT 
  EXTRACT(MONTH FROM r.fecha_llegada) AS MES,
  A.TIPO_ALOJA,
  COUNT(*) AS CANTIDAD_RESERVAS,
  SUM(R.PRECIO) AS INGRESOS_TOTAL
FROM 
  RESERVA R
  JOIN ALOJAMIENTO A ON R.ID_ALOJAMIENTO = A.ID
GROUP BY 
  EXTRACT(MONTH FROM r.fecha_llegada), 
  A.TIPO_ALOJA
ORDER BY 
  EXTRACT(MONTH FROM r.fecha_llegada), 
  A.TIPO_ALOJA;

--RFC8--

SELECT C.IDENTIFICACION, COUNT(*) AS NUM_RESERVAS, SUM(TRUNC(MONTHS_BETWEEN(R.FECHA_SALIDA, R.FECHA_LLEGADA)*30)) AS NUM_NOCHES
FROM RESERVA R
INNER JOIN CLIENTE C ON R.ID_CLIENTE = C.IDENTIFICACION
WHERE R.ID_ALOJAMIENTO = 1
GROUP BY C.IDENTIFICACION
HAVING COUNT(*) >= 3 OR SUM(TRUNC(MONTHS_BETWEEN(R.FECHA_SALIDA, R.FECHA_LLEGADA)*30)) >= 15
ORDER BY NUM_RESERVAS DESC;

--RFC9--

SELECT A.ID, A.TIPO_ALOJA
FROM ALOJAMIENTO A
WHERE NOT EXISTS (
    SELECT *
    FROM RESERVA R 
    WHERE R.ID_ALOJAMIENTO = A.ID
    AND R.FECHA_LLEGADA >= (SELECT MAX(FECHA_LLEGADA) FROM RESERVA WHERE ID_ALOJAMIENTO = A.ID) - INTERVAL '1' MONTH);


